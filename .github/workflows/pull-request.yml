name: Main Branch Build

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  get_version:
    name: Populate Version
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        uses: actions/checkout@v2
      - id: execute
        run: |
          export VERSION="$((grep -w 'version' | cut -d= -f2) < gradle.properties)"
          echo "::set-output name=version::${VERSION}"
    outputs:
      version: ${{steps.execute.outputs.version}}
  build:
    needs: get_version
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Ubuntu Build
        if: matrix.os == 'ubuntu-latest'
        env:
          packageUser: ${{ secrets.USERNAME }}
          packagePAT: ${{ secrets.JRE_ARTIFACTS_TOKEN }}
        run: ./gradlew build --scan
      - name: Windows Build
        if: matrix.os == 'windows-latest'
        env:
          packageUser: ${{ secrets.USERNAME }}
          packagePAT: ${{ secrets.JRE_ARTIFACTS_TOKEN }}
        run: ./gradlew.bat build --scan
      - name: MacOS Build
        if: matrix.os == 'macOS-latest'
        env:
          packageUser: ${{ secrets.USERNAME }}
          packagePAT: ${{ secrets.JRE_ARTIFACTS_TOKEN }}
        run: ./gradlew build --scan
