name: Publish release

on:
  workflow_dispatch:

jobs:
  publish-release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Set env-variable for release version
        run: echo "VERSION=$((grep -w 'version' | cut -d= -f2) < gradle.properties | cut -d- -f1)" >> $GITHUB_ENV
      - name: Checkout to release branch
        env:
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
        run: |
          echo "Version: ${VERSION}"
          git config user.name ${{ secrets.USERNAME }}
          git config user.email nipunaranasinghe93@gmail.com
          git checkout -b release-${VERSION}
      - name: Grant execute permission for gradlew
        run: git update-index --chmod=+x gradlew
      - name: Publish linux artifacts
        if: matrix.os == 'ubuntu-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.JRE_ARTIFACTS_TOKEN }}
          packageUser: ${{ secrets.USERNAME }}
          packagePAT: ${{ secrets.JRE_ARTIFACTS_TOKEN }}
        run: |
          ./gradlew release -Prelease.useAutomaticVersion=true
          ./gradlew -Pversion=${VERSION} publish
      - name: Publish windows artifacts
        if: matrix.os == 'windows-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.JRE_ARTIFACTS_TOKEN }}
          packageUser: ${{ secrets.USERNAME }}
          packagePAT: ${{ secrets.JRE_ARTIFACTS_TOKEN }}
        run: |
          ./gradlew.bat release -Prelease.useAutomaticVersion=true
          ./gradlew.bat -Pversion=${VERSION} publish
      - name: Publish macOS artifacts
        if: matrix.os == 'macOS-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.JRE_ARTIFACTS_TOKEN }}
          packageUser: ${{ secrets.USERNAME }}
          packagePAT: ${{ secrets.JRE_ARTIFACTS_TOKEN }}
        run: |
          ./gradlew release -Prelease.useAutomaticVersion=true
          ./gradlew -Pversion=${VERSION} publish
      - name: Create Github release from the release tag
        run: |
          curl --request POST 'https://api.github.com/repos/NipunaRanasinghe/ballerina-jre-test/releases' \
          --header 'Accept: application/vnd.github.v3+json' \
          --header 'Authorization: Bearer ${{ secrets.JRE_ARTIFACTS_TOKEN }}' \
          --header 'Content-Type: application/json' \
          --data-raw '{
          "tag_name": "v'"$VERSION"'",
          "name": "ballerina-jre-test-v'"$VERSION"'"
          }'
