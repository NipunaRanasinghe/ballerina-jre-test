import groovy.json.JsonSlurper

plugins {
    id "de.undercouch.download" version "4.1.1"
}
allprojects {
    apply plugin: 'maven'
    apply plugin: 'maven-publish'

    group = project.group
    version = project.version

    repositories {
        mavenCentral()
    }

    release {
        // Workaround to fix build task not found issue in release plugin
        buildTasks = []
        failOnSnapshotDependencies = false
        failOnCommitNeeded = false
        versionPropertyFile = 'gradle.properties'
        tagTemplate = 'v${version}'
        git {
            // To release from any branch
            requireBranch = ''
        }
    }

    afterReleaseBuild.dependsOn publishToMavenLocal
    afterReleaseBuild.dependsOn publish
}

task getModuleList {
    // Reads default modules included in AdoptOpenJre 11
    def defaultModuleFile = new File("$projectDir/resources/adoptOpenJre11_modules.json")
    def defaultModules = new JsonSlurper().parseText(defaultModuleFile.text).modules.join(',')

    // Reads additional modules required for ballerina runtime.
    def additionalModuleFile = new File("$projectDir/resources/additional_modules.json")
    def additionalModules = new JsonSlurper().parseText(additionalModuleFile.text).modules.join(',')
}

task downloadJdkforLinux(type: Download) {
    src 'https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.8%2B10/OpenJDK11U-jdk_x64_linux_hotspot_11.0.8_10.tar.gz'
    dest new File("$buildDir/temp/downloads/", "jdk11-linux.tar.gz")
    overwrite false
    onlyIfModified true
}

task downloadJdkforWindows(type: Download) {
    src 'https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.8%2B10/OpenJDK11U-jdk_x64_linux_hotspot_11.0.8_10.tar.gz'
    dest new File("$buildDir/temp/downloads/", "jdk11-windows.zip")
    overwrite false
    onlyIfModified true
}

task downloadJdkforMac(type: Download) {
    src 'https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.8%2B10/OpenJDK11U-jdk_x64_linux_hotspot_11.0.8_10.tar.gz'
    dest new File("$buildDir/temp/downloads/", "jdk11-mac.tar.gz")
    overwrite false
    onlyIfModified true
}

task extractJdkForLinux(type: Copy, dependsOn: downloadJdkforLinux) {
    from tarTree(downloadJdkforLinux.dest)
    into "$buildDir/temp/extracted/"
    rename { String fileName ->
        fileName.replace(".*", 'jdk11-linux')
    }
}

task extractJdkForWindows(type: Copy, dependsOn: downloadJdkforWindows) {
    from tarTree(downloadJdkforWindows.dest)
    into "$buildDir/temp/extracted/"
    rename { String fileName ->
        fileName.replace(".*", 'jdk11-windows')
    }
}

task extractJdkForMac(type: Copy, dependsOn: downloadJdkforMac) {
    from tarTree(downloadJdkforMac.dest)
    into "$buildDir/temp/extracted/"
    rename { String fileName ->
        fileName.replace(".*", 'jdk11-mac')
    }
}

task buildJreForLinux(type: Exec, dependsOn: extractJdkForLinux) {
    workingDir "$buildDir/temp/extracted/jdk11-linux/jdk-11.0.8+10/bin"
    executable 'jlink'
    args '--add-modules', 'java.base,jdk.jdi', '--output', '../../../jre/ballerina-jre11-linux'
}

task compressjre11forLinux(type: Zip, dependsOn: buildJreForLinux) {
    from "$buildDir/temp/extracted/jre/ballerina-jre11-linux/"
    include '*'
    archiveName "ballerina-jre11-linux-${artifact_version}.zip"
    destinationDirectory = file("$buildDir/jre/")
}

//artifacts {
//    balo configurations.distBal.files
//    zip file: file("$buildDir/distributions/${project.name}-${project.version}.zip"), builtBy: createZip
//    unzipped file: file("$buildDir/extracted-distributions/${project.name}-${project.version}"), builtBy: createDistribution
//}

task deleteTemporaryFiles(type: Delete) {
    delete "$buildDir/temp/"
}
